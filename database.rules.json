{
  "rules": {
    "admin": {
      ".read": "root.child('admin').val() === auth.uid",
      ".validate": "newData.isString()"
    },
    "privilegedUsers": {
      "$uid": {
        ".read": "$uid === auth.uid",
        ".write": "root.child('admin').val() === auth.uid",
        ".validate": "newData.isBoolean()"
      }
    },
    "userList": {
      ".read": "root.child('admin').val() === auth.uid",
      ".write": "auth != null",
      ".validate": "newData.hasChild(auth.uid) && newData.child(auth.uid).isString() && newData.child(auth.uid).val().contains('@') && newData.val().contains('.')",
      "$uid": {
        ".validate": "$uid === auth.uid && newData.val().contains('@') && newData.val().contains('.')"
      }
    },
    "users": {
      ".read": "root.child('admin').val() === auth.uid",
      ".write": "auth != null",
      "$uid": {
        ".read": true,
        ".validate": "$uid === auth.uid",
        "name": {
          ".validate": "$uid === auth.uid && newData.isString()"
        },
        "affiliation": {
          ".validate": "$uid === auth.uid && newData.isString()"
        },
        "icon": {
          ".validate": "$uid === auth.uid && newData.isString()"
        },
        "info": {
          ".validate": "$uid === auth.uid && newData.isString()"
        },
        "email": {
          ".validate": "$uid === auth.uid && newData.isString() && newData.val().contains('@') && newData.val().contains('.')"
        },
        "posts": {
          ".validate": "root.child('privilegedUsers').child(auth.uid).val() === true && $uid === auth.uid",
          "$pid": {
            ".validate": "$uid === auth.uid && newData.isBoolean()"
          }
        },
        "$others": {
          ".validate": false
        }
      }
    },
    "news": {
      ".read": true,
      ".write": "root.child('privilegedUsers').child(auth.uid).val() === true",
      "$pid": {
        ".read": "data.child('public').val() === true",
        ".write": "root.child('admin').val() === auth.uid || data.exists() ? auth.uid === data.child('authorId').val() : root.child('privilegedUsers').child(auth.uid).val() === true",
        ".validate": "newData.hasChildren(['time','title','authorId'])",
        "time": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.val() <= now"
        },
        "title": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.isString()"
        },
        "authorId": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.val() === auth.uid"
        },
        "$others": {
          ".validate": false
        }
      }
    },
    "weatherBriefing": {
      ".read": true,
      ".write": "root.child('privilegedUsers').child(auth.uid).val() === true",
      "$pid": {
        ".read": "data.child('public').val() === true",
        ".write": "root.child('admin').val() === auth.uid || data.exists() ? auth.uid === data.child('authorId').val() : root.child('privilegedUsers').child(auth.uid).val() === true",
        ".validate": "newData.hasChildren(['time','title','authorId'])",
        "time": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.val() <= now"
        },
        "title": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.isString()"
        },
        "authorId": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.val() === auth.uid"
        },
        "$others": {
          ".validate": false
        }
      }
    },
    "workingReports": {
      ".read": true,
      ".write": "root.child('privilegedUsers').child(auth.uid).val() === true",
      "$pid": {
        ".read": "data.child('public').val() === true",
        ".write": "root.child('admin').val() === auth.uid || data.exists() ? auth.uid === data.child('authorId').val() : root.child('privilegedUsers').child(auth.uid).val() === true",
        ".validate": "newData.hasChildren(['time','title','authorId'])",
        "time": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.val() <= now"
        },
        "title": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.isString()"
        },
        "authorId": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.val() === auth.uid"
        },
        "$others": {
          ".validate": false
        }
      }
    },
    "publicPosts": {
      ".read": true,
      ".write": "root.child('privilegedUsers').child(auth.uid).val() === true",
      "$pid": {
        ".read": "data.child('public').val() === true",
        ".write": "root.child('admin').val() === auth.uid || data.exists() ? auth.uid === data.child('authorId').val() : root.child('privilegedUsers').child(auth.uid).val() === true",
        ".validate": "newData.hasChildren(['time','title','authorId'])",
        "time": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.val() <= now"
        },
        "title": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.isString()"
        },
        "authorId": {
          ".read": "auth.uid === data.parent().child('authorId').val()",
          ".validate": "newData.val() === auth.uid"
        },
        "$others": {
          ".validate": false
        }
      }
    },
    "privatePosts": {
      ".write": "root.child('privilegedUsers').child(auth.uid).val() === true",
      "$uid": {
        ".read": "$uid === auth.uid",
        ".validate": "$uid === auth.uid",
        "$pid": {
          ".validate": "newData.hasChildren(['time','title','authorId'])",
          "time": {
            ".read": "auth.uid === data.parent().child('authorId').val()",
            ".validate": "newData.val() <= now"
          },
          "title": {
            ".read": "auth.uid === data.parent().child('authorId').val()",
            ".validate": "newData.isString()"
          },
          "authorId": {
            ".read": "auth.uid === data.parent().child('authorId').val()",
            ".validate": "newData.val() === auth.uid"
          },
          "$others": {
            ".validate": false
          }
        }
      }
    },
    "content": {
      "$pid": {
        ".read": true,
        ".write": "root.child('publicPosts').child($pid).child('authorId').val() === auth.uid || root.child('privatePosts').child($pid).child('authorId').val() === auth.uid",
        ".validate": "newData.isString()"
      }
    }
  }
}